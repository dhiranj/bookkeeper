version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: library
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "library"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend-app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "postgres://user:password@postgres:5432/library"
      MONGO_URL: "mongodb://mongodb:27017/library"
    volumes:
      - .:/app
    command: ["sh", "-c", "npx sequelize-cli db:migrate && npm start"]

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend-app
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    command: ["npx", "next", "dev", "-p", "3000"]

volumes:
  postgres_data:
  mongo_data:
